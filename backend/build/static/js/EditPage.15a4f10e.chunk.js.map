{"version":3,"file":"static/js/EditPage.15a4f10e.chunk.js","mappings":"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","sources":["api/editColls/cancelSeria.ts","api/editColls/deleteSeria.ts","api/editColls/getDataForEdit.ts","api/editColls/saveSeria.ts","Utils/EditPage/saveControl.ts","Utils/EditPage/Validation.ts","pages/EditPage/AddFragment/AddFragment.tsx","Utils/EditPage/calcSizes.ts","Utils/EditPage/dropHand.ts","components/MiniLoader/MiniLoader.tsx","Utils/EditPage/checkLoading.ts","Utils/other/numToSize.ts","pages/EditPage/BookPart/BookPart.tsx","pages/EditPage/BookLine/BookLine.tsx","pages/EditPage/CollLine/CollLine.tsx","pages/EditPage/FragmentsEditor/FragmentsEditor.tsx","pages/EditPage/Imageinput/ImageInput.tsx","pages/EditPage/TextInputs/textInputs.tsx","pages/EditPage/EditPage.tsx"],"sourcesContent":["import { store } from \"../../redux/store\";\r\nimport { EditState } from \"../../types/editSlice\";\r\nimport { GetToken } from \"../../Utils/appData/GetSaveToken\";\r\nimport { adress } from \"../apiAdress\";\r\n\r\nexport async function cancelSeria():Promise<'error'|'ok'>{\r\n    try{\r\n        let editState: EditState = store.getState().edit;\r\n        let removeList = editState.removeOnCancel;\r\n\r\n        let apiObj = {\r\n            RemoveList:removeList,\r\n        }\r\n\r\n        let apiadress=adress+`/api/cancel`;\r\n        let res = await fetch(apiadress,{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'authorization': GetToken(),\r\n            },\r\n            body:JSON.stringify(apiObj),\r\n        })\r\n        let text= await res.text();\r\n\r\n        return text as 'error'|'ok';\r\n    }catch{\r\n        return 'error';\r\n    }\r\n}","import { store } from \"../../redux/store\";\r\nimport { EditState } from \"../../types/editSlice\";\r\nimport { allFilesToRemoveList } from \"../../Utils/apiUtils/apiUtils\";\r\nimport { GetToken } from \"../../Utils/appData/GetSaveToken\";\r\nimport { adress } from \"../apiAdress\";\r\n\r\nexport async function deleteSeria():Promise<'error'|'ok'>{\r\n    try{\r\n        let editState: EditState = store.getState().edit;\r\n        let removeList1:string[] = editState.removeOnCancel;\r\n        let removeList2:string[] = allFilesToRemoveList(editState);\r\n\r\n        let apiObj = {\r\n            RemoveList:[...removeList1,...removeList2],\r\n            href:editState.href,\r\n        }\r\n\r\n        let apiadress=adress+`/api/delete`;\r\n        let res = await fetch(apiadress,{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'authorization': GetToken(),\r\n            },\r\n            body:JSON.stringify(apiObj),\r\n        })\r\n        let text= await res.text();\r\n\r\n        return text as 'error'|'ok';\r\n    }catch{\r\n        return 'error';\r\n    }\r\n}\r\n","import { BookMapFetch} from \"../../types/api\";\r\nimport { EditState } from \"../../types/editSlice\";\r\nimport { ApiMapToEditMap } from \"../../Utils/apiUtils/apiUtils\";\r\nimport { adress } from \"../apiAdress\";\r\n\r\n\r\nexport async function getDataForEdit(bookname:string):Promise<EditState|'error'> {\r\n    if (bookname==='newbook'){\r\n        let result:EditState ={\r\n            href:'newbook',\r\n            collName:'',\r\n            authtorName:'',\r\n            description:'',\r\n            bookImage:{url:'',googleid:'',status:'loadend'},\r\n            collections: [],\r\n            removeOnCancel:[],\r\n            removeOnSave:[],\r\n            loading:false,\r\n            showColl:-1,\r\n            showBook:-1,\r\n            dpopElement:-1,\r\n            dpopType:'',\r\n        }\r\n        return result;\r\n    }\r\n\r\n    try{\r\n        let apiadress=adress+`/api/getbookmap/${bookname}`;\r\n        let res = await fetch(apiadress);\r\n        let json:BookMapFetch = await res.json();\r\n        let editState: EditState = ApiMapToEditMap(json);\r\n        return editState;\r\n    }catch{\r\n        return 'error';\r\n    }\r\n}   \r\n\r\n","import { store } from \"../../redux/store\";\r\nimport { BookMapFetch} from \"../../types/api\";\r\nimport { EditState } from \"../../types/editSlice\";\r\nimport { editMapToApiMap } from \"../../Utils/apiUtils/apiUtils\";\r\nimport { GetToken } from \"../../Utils/appData/GetSaveToken\";\r\nimport { adress } from \"../apiAdress\";\r\n\r\n\r\nexport async function saveSeria():Promise<'error'|'ok'>{\r\n    try{\r\n        let editState: EditState = store.getState().edit;\r\n        let fetchBookMap: BookMapFetch = editMapToApiMap(editState);\r\n        let removeList = editState.removeOnSave;\r\n\r\n        let apiObj = {\r\n            bookMap:fetchBookMap,\r\n            RemoveList:removeList,\r\n            lasthref: editState.href,\r\n        }\r\n\r\n        let apiadress=adress+`/api/${editState.href==='newbook'?'save':'edit'}`;\r\n        let res = await fetch(apiadress,{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'authorization': GetToken(),\r\n            },\r\n            body:JSON.stringify(apiObj),\r\n        })\r\n        let text= await res.text();\r\n\r\n        return text as 'error'|'ok';\r\n    }catch (e){\r\n        return 'error';\r\n    }\r\n}\r\n","let saved = false;\r\n\r\nexport function resetSaveControl(){\r\n    saved = false;\r\n}\r\n\r\nexport function okSaveControl(){\r\n    saved = true;\r\n}\r\n\r\nexport function checkSaveControl(){\r\n    return saved;\r\n}\r\n","import { store } from \"../../redux/store\";\r\n\r\nexport function ValidationEdit():string{\r\n    let editState = store.getState().edit;\r\n    if (editState.loading) return 'фрагменты еще загружаются';\r\n    if (editState.authtorName==='') return 'заполните имя автора';\r\n    if (editState.collName==='') return 'введите название';\r\n    if (editState.description==='') return 'заполните описание';\r\n    if (editState.authtorName.length>40) return 'имя автора максимум 40 символов';\r\n    if (editState.collName.length>40) return 'название максимум 40 символов';\r\n    if (editState.description.length>1000) return 'описание максимум 1000 символов';\r\n    if (checkRegular(editState.authtorName)) return 'используйте русские символы';\r\n    if (checkRegular(editState.collName)) return 'используйте русские символы';\r\n    return 'ok';\r\n}\r\n\r\nfunction checkRegular(str:string){\r\n    let regular = /^[0-9а-яА-Я ;:,.?!-]+$/;\r\n    return !regular.test(str)\r\n}","import './style.scss';\r\n\r\ntype props = {\r\n    onClick:()=>void,\r\n}\r\n\r\nexport function AddFragment({onClick}:props){\r\n    return <div className=\"addfragment\" onClick={onClick}>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n}","import { EditBook } from \"../../types/editSlice\";\r\n\r\nexport function getheight(books:EditBook[],showBook:number){\r\n    let sum = 45;\r\n    books.forEach((elem,index)=>{\r\n        if (index===showBook){\r\n            let num1 = elem.bookparts.length;\r\n            let num2 = 45+(num1>=9?10:num1+1)*45;\r\n            sum+=num2;\r\n        }else{\r\n            sum+=45;\r\n        }\r\n    })\r\n    return sum+'px';\r\n}","import { changePositiom, setDropElem } from \"../../redux/slices/EditSlice\";\r\nimport { dispatch, store } from \"../../redux/store\";\r\n\r\nexport function moveHandler(event:React.MouseEvent,type:'coll'|'book',num:number){\r\n    let parent = event.currentTarget.parentElement;\r\n    if (!parent) return;\r\n    let clone = document.createElement('div');\r\n    dispatch(setDropElem({num,type}));\r\n    {   // clone\r\n        clone.className=parent!.className;\r\n        clone.innerHTML=parent!.innerHTML;\r\n        clone.style.position='absolute';\r\n        clone.style.zIndex='50';\r\n        clone.style.width=parent!.clientWidth+'px';\r\n        let rect = parent?.getBoundingClientRect();\r\n        let bodyScrollTop = window.pageYOffset;\r\n        clone.classList.add('droping');\r\n        clone.style.left=rect!.left+'px';\r\n        clone.style.top=rect!.top+bodyScrollTop+'px'; \r\n        document.body.appendChild(clone);                              \r\n    }\r\n    let {collections,showColl}=store.getState().edit;\r\n    let alllenght = (type==='coll')?collections.length:collections[showColl].books.length;\r\n    let startY = event.pageY;\r\n    let startY2 = event.pageY;\r\n    let index = num;\r\n\r\n    function mousemove(e:MouseEvent){\r\n        let nowY = e.pageY;\r\n        let delta1 = nowY-startY;\r\n        let delta2 = nowY-startY2;\r\n        let deltaABS = Math.abs(delta1);\r\n        clone.style.transform = `translateY(${delta2}px)`;\r\n\r\n        if ((deltaABS+15)>45){\r\n            let needindex =delta1>0?index+1:index-1;\r\n            if (needindex<0 || needindex>=alllenght || needindex===index) return;\r\n            dispatch(changePositiom({num:index,neednum:needindex,type}));\r\n            index=needindex;\r\n            startY = startY+(delta1>0?45:-45);\r\n        }\r\n    }\r\n\r\n    function mouseup(){\r\n        clone.remove();\r\n        dispatch(setDropElem({num:-1,type:''}));\r\n        document.removeEventListener('mousemove',mousemove);\r\n        document.removeEventListener('mouseup',mouseup);\r\n    }\r\n    document.addEventListener('mouseup',mouseup);\r\n    document.addEventListener('mousemove',mousemove);\r\n}","import './style.scss';\r\n\r\nexport function MiniLoader(){\r\n    return <div className='mini-loader'>\r\n        <div className='spiner'>\r\n            <div className='loaderpart'>\r\n                <div className='loaderpart'>\r\n                    <div className='loaderpart'></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import { Editbookpart } from \"../../types/editSlice\";\r\n\r\nexport function checkLoading(bookparts: Editbookpart[]):string{\r\n    let status = 'loadend';\r\n\r\n    for(let part of bookparts){\r\n        if (part.status==='error'){\r\n            status='error';\r\n            return status;\r\n        }\r\n    }\r\n\r\n    for(let part of bookparts){\r\n        if (part.status==='loading'|| part.status==='waitloading'){\r\n            status='loading';\r\n            return status;\r\n        }\r\n    }\r\n\r\n    return status;\r\n}","export function numToSize(size:number):string{\r\n    let i = 0;\r\n    let num = size;\r\n\r\n    while (true){\r\n        if (num/1024<1){\r\n            break;\r\n        }else{\r\n            num = num/1024;\r\n            i++;\r\n        }\r\n    }\r\n    let arr = ['B','KB','MB','GB','TB'];\r\n\r\n    num=Math.floor(num*100)/100;\r\n\r\n    return `${num} ${arr[i]}`;\r\n}","import { MiniLoader } from '../../../components/MiniLoader/MiniLoader';\r\nimport { removeFragment } from '../../../redux/slices/EditSlice';\r\nimport { useAppDispatch } from '../../../redux/store';\r\nimport { Editbookpart } from '../../../types/editSlice';\r\nimport { abortUpload } from '../../../Utils/apiUtils/abortFileUpload';\r\nimport { numToTime } from '../../../Utils/forPleer/numtotime';\r\nimport { numToSize } from '../../../Utils/other/numToSize';\r\nimport './style.scss';\r\n\r\ntype PropsType = {\r\n    part:Editbookpart,\r\n    numCol:number,\r\n    numBook:number,\r\n}\r\n\r\nexport function BookPart({part,numCol,numBook}:PropsType){\r\n    let dispatch = useAppDispatch();\r\n\r\n    let {status, size, lenght,name}= part;\r\n    let jsxfragment=<></>;\r\n\r\n    if (status==='waitloading'){\r\n        jsxfragment=<>\r\n            <div className='fragment-data-block'>\r\n                <span></span>\r\n                <span>{`${name} ждет загрузки`}</span>\r\n                <span></span>\r\n            </div>\r\n            <div className='delete' onClick={()=>{dispatch(removeFragment({numCol,numBook,partID:part.id}))}}>\r\n                <div className='try'></div>\r\n                <div className='try'></div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    if (status==='loading'){\r\n        jsxfragment=<>\r\n            <div className='fragment-data-block loading'>\r\n                <div className='loader-for-part'>\r\n                    <MiniLoader/>\r\n                </div>\r\n                <span>Идет загрузка...</span>\r\n            </div>\r\n            <div className='abort-button' onClick={()=>abortUpload()}>прервать</div>\r\n        </>\r\n    }\r\n\r\n    if (status==='loadend'){\r\n        jsxfragment=<>\r\n            <div className='fragment-data-block'>\r\n                <span>{numToTime(lenght)}</span>\r\n                <span>{name}</span>\r\n                <span>{numToSize(size||0)}</span>\r\n            </div>\r\n            <div className='delete' onClick={()=>{dispatch(removeFragment({numCol,numBook,partID:part.id}))}}>\r\n                <div className='try'></div>\r\n                <div className='try'></div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    if (status==='error'){\r\n        jsxfragment=<>\r\n            <div className='fragment-data-block'>\r\n                <span className='error'>ошибка с {part.name}</span>\r\n            </div>\r\n            <div className='delete' onClick={()=>{dispatch(removeFragment({numCol,numBook,partID:part.id}))}}>\r\n                <div className='try'></div>\r\n                <div className='try'></div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    return <div className='book-part-block'>\r\n        {jsxfragment}\r\n    </div>\r\n}","import { useEffect, useRef, useState } from 'react';\r\nimport { MiniLoader } from '../../../components/MiniLoader/MiniLoader';\r\nimport { asyncAddBookFrahments, asyncSetBookImage, changebookname, removebook, ShowHideBook } from '../../../redux/slices/EditSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/store';\r\nimport { Editbookpart, EditImage } from '../../../types/editSlice';\r\nimport { checkLoading } from '../../../Utils/EditPage/checkLoading';\r\nimport { moveHandler } from '../../../Utils/EditPage/dropHand';\r\nimport { BookPart } from '../BookPart/BookPart';\r\nimport './style.scss';\r\n\r\ntype props = {\r\n    numcoll: number,\r\n    numbook:number,\r\n    name:string,\r\n    image:EditImage,\r\n    bookparts: Editbookpart[],\r\n    show:boolean,\r\n    canMove:boolean,\r\n}\r\n\r\nexport function Bookline({numcoll,numbook,name,bookparts,image,show,canMove}:props){\r\n    let dispatch = useAppDispatch();\r\n    let loading = useAppSelector((state)=>state.edit.loading);\r\n    let dpopElement = useAppSelector((state)=>state.edit.dpopElement);\r\n    let dpopType = useAppSelector((state)=>state.edit.dpopType);\r\n\r\n    let [renderbooks,setrenderbooks]=useState(false);\r\n    let timoutID = useRef<NodeJS.Timeout|null>(null);\r\n    useEffect(()=>{\r\n        if (timoutID.current) clearTimeout(timoutID.current);\r\n        if (show){\r\n            setrenderbooks(true);\r\n        }else{\r\n            timoutID.current = setTimeout(()=>{\r\n                setrenderbooks(false);\r\n            },300);\r\n        }\r\n    },[show]);\r\n\r\n    let bookPartsBlocks = renderbooks?bookparts.map((elem,index)=>{\r\n        return <BookPart\r\n        numBook={numbook}\r\n        numCol={numcoll}\r\n        part={elem}\r\n        key={index}\r\n        />\r\n    }):<></>;\r\n\r\n    \r\n    async function ImageInputOnChange(event: React.ChangeEvent<HTMLInputElement>){\r\n        if (event.target.files===null) return;\r\n        let file = event.target.files![0];\r\n        let payload = {\r\n            img: file,\r\n            numColl: numcoll,\r\n            nummBook: numbook,\r\n        };\r\n        dispatch(asyncSetBookImage(payload));\r\n        event.target.value='';\r\n    }\r\n    function addFragmentInput(event: React.ChangeEvent<HTMLInputElement>){\r\n        if (!event.target.files) return;\r\n        let fileArray:File[]=Array.from(event.target.files);\r\n        dispatch(asyncAddBookFrahments({numColl:numcoll,nummBook:numbook,files:fileArray}));\r\n        event.target.value='';\r\n    }\r\n\r\n    let Arrayfragments = useRef<HTMLDivElement>(null);\r\n    function scrollFragmentsBlock(to:'start'|'end'){\r\n        if (!Arrayfragments.current) return console.log('none');\r\n        let block = Arrayfragments.current;\r\n        to ==='start'?block.scrollTo({top:0}):block.scrollTo({top:block.scrollHeight});\r\n    }\r\n    let [scrolparam,setscrolparam] = useState<'start'|'end'|''>('end');\r\n    function onscroll(){\r\n        if (!Arrayfragments.current) return console.log('none');\r\n        let block = Arrayfragments.current;\r\n        let scrollTop = block.scrollTop;\r\n        let scrollBottom = block.scrollHeight-block.clientHeight-block.scrollTop;\r\n\r\n        if (scrollTop===0 && scrollBottom>10 && scrolparam!=='start') setscrolparam('start');\r\n        if (scrollTop>40 && scrollBottom<10 && scrolparam!=='end') setscrolparam('end');\r\n        if (scrollTop>40 && scrollBottom>40 && scrolparam!=='') setscrolparam('');\r\n    }\r\n\r\n    return <div className={`edit-book-line ${show?'show':''}`}>\r\n        <div className={`book-block ${(dpopType==='book'&& dpopElement===numbook)?'dropImpOpacity':''}`}>\r\n            <input type=\"text\" value={name} onChange={(event)=>dispatch(changebookname({Collnum: numcoll, Booknum:numbook, newName:event.target.value}))}/>\r\n            <div className='symb' onClick={()=>dispatch(ShowHideBook(numbook))}></div>\r\n            <div className='delete' onClick={()=>dispatch(removebook({Collnum: numcoll, Booknum:numbook}))}>\r\n                <div className='try'></div>\r\n                <div className='try'></div>\r\n            </div>\r\n            <div className={`add-imageforbook ${image.url?'haveimage':''} ${image.status==='error'?'error':''} ${image.status==='loading'?'loading':''}`}>\r\n                <div className='image-previe' style={{backgroundImage:`url(${image.status==='loadend'?image.url:''})`}}>\r\n                    {image.status==='loading'?<MiniLoader/>:<></>}\r\n                    {image.status==='error'?\r\n                    <span>Ошибка</span>:<></>}\r\n                </div>\r\n                <span>обложка</span>\r\n                <input type=\"file\" accept=\"image/*\" onChange={ImageInputOnChange}/>\r\n            </div>\r\n            <div className={`status-circle ${checkLoading(bookparts)}`}></div>\r\n            <div onMouseDown={(canMove && !loading)?(event)=>{moveHandler(event,'book',numbook)}:()=>{}} className={`change-position ${(canMove && !loading)?'active':''}`}></div>\r\n        </div>\r\n        <div ref={Arrayfragments} onScroll={onscroll} className='array-fragments' style={{height:`${(bookparts.length+1)*45}px`}}>\r\n            {bookPartsBlocks}\r\n            <div className='add-fragments-button'>\r\n                <span>{loading?'Дождитесь другой загрузки':'Загрузить фрагменты'}</span>\r\n                {!loading?<input type=\"file\" accept=\"audio/*\" onChange={addFragmentInput} multiple />:<></>}\r\n            </div>\r\n        </div>\r\n        {(bookparts.length>9)?<>\r\n            <div onClick={()=>scrolparam!=='start'?scrollFragmentsBlock('start'):()=>{}}\r\n             className={`scrol-icon ${show?'show':''} ${scrolparam==='start'?'opacity':''}`}\r\n             style={{}}></div>\r\n            <div onClick={()=>scrolparam!=='end'?scrollFragmentsBlock('end'):()=>{}}\r\n             className={`scrol-icon two ${show?'show':''} ${scrolparam==='end'?'opacity':''}`}\r\n             style={{}}></div>\r\n        </>:<></>}\r\n    </div>\r\n}","import { useEffect, useRef, useState } from 'react';\r\nimport { addbook, changecollname, removecoll, showHideColl } from '../../../redux/slices/EditSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/store';\r\nimport { EditBook } from '../../../types/editSlice';\r\nimport { getheight } from '../../../Utils/EditPage/calcSizes';\r\nimport { moveHandler } from '../../../Utils/EditPage/dropHand';\r\nimport { AddFragment } from '../AddFragment/AddFragment';\r\nimport { Bookline } from '../BookLine/BookLine';\r\nimport './style.scss';\r\n\r\ntype props = {\r\n    num: number,\r\n    name:string,\r\n    books: EditBook[],\r\n}\r\n\r\nexport function CollLine({num,name,books}:props){\r\n    let dispatch = useAppDispatch();\r\n    let showColl = useAppSelector((state)=>state.edit.showColl);\r\n    let showBook = useAppSelector((state)=>state.edit.showBook);\r\n    let loading = useAppSelector((state)=>state.edit.loading);\r\n\r\n    let dpopElement = useAppSelector((state)=>state.edit.dpopElement);\r\n    let dpopType = useAppSelector((state)=>state.edit.dpopType);\r\n\r\n    let [renderbooks,setrenderbooks]=useState(false);\r\n    let timoutID = useRef<NodeJS.Timeout|null>(null);\r\n    useEffect(()=>{\r\n        if (timoutID.current) clearTimeout(timoutID.current);\r\n        if (showColl===num){\r\n            setrenderbooks(true);\r\n        }else{\r\n            timoutID.current = setTimeout(()=>{\r\n                setrenderbooks(false);\r\n            },300);\r\n        }\r\n    },[showColl,num]);\r\n\r\n    let arraybooks=renderbooks?books.map((elem,index)=>{\r\n        return <Bookline\r\n        image={elem.image}\r\n        bookparts={elem.bookparts}\r\n        name={elem.name}\r\n        numcoll={num}\r\n        numbook={index}\r\n        key={index}\r\n        show={showColl===num && showBook===index}\r\n        canMove={showBook===-1}\r\n        />\r\n    }):<></>;\r\n\r\n\r\n    return <div className={`edit-collection-line ${showColl===num?'show':''}`}>\r\n        <div className={`coll-block ${(dpopType==='coll'&& dpopElement===num)?'dropImpOpacity':''}`}>\r\n            <input type=\"text\" value={name} onChange={(event)=>dispatch(changecollname({num,name:event.target.value}))}/>\r\n            <div className='symb' onClick={()=>dispatch(showHideColl(num))}></div>\r\n            <div className='delete' onClick={()=>dispatch(removecoll(num))}>\r\n                <div className='try'></div>\r\n                <div className='try'></div>\r\n            </div>\r\n            <div onMouseDown={(showColl===-1 && !loading)?(event)=>{moveHandler(event,'coll',num)}:()=>{}} className={`change-position ${(showColl===-1 && !loading)?'active':''}`}></div>\r\n        </div>\r\n        <div className='array-books' style={{height: getheight(books,showBook)}}>\r\n            {arraybooks}\r\n            <AddFragment onClick={()=>{dispatch(addbook(num))}}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import { addcoll } from '../../../redux/slices/EditSlice';\r\nimport { RootState, useAppDispatch, useAppSelector } from '../../../redux/store';\r\nimport { AddFragment } from '../AddFragment/AddFragment';\r\nimport { CollLine } from '../CollLine/CollLine';\r\nimport './style.scss';\r\n\r\nexport function FragmentsEditor(){\r\n    let collections = useAppSelector((state:RootState)=>state.edit.collections);\r\n    let drop = useAppSelector((state:RootState)=>state.edit.dpopType);\r\n    let dispatch = useAppDispatch();\r\n\r\n    let arrColls = collections.map((elem,index)=>{\r\n        return <CollLine\r\n        books={elem.books}\r\n        name={elem.name}\r\n        num={index}\r\n        key={index}\r\n        />\r\n    })\r\n\r\n    return <div className={`editor-conteiner ${drop?'miniopacity':''}`}>\r\n        {arrColls}\r\n        <AddFragment onClick={()=>dispatch(addcoll())}/>\r\n    </div>\r\n}","import { Loader } from \"../../../components/Loader/Loader\";\r\nimport { asyncSetMainImage } from \"../../../redux/slices/EditSlice\";\r\nimport { RootState, useAppDispatch, useAppSelector } from \"../../../redux/store\";\r\n\r\nexport function ImageInput(){\r\n    let bookImage = useAppSelector((state:RootState)=>state.edit.bookImage);\r\n    let dispatch = useAppDispatch();\r\n\r\n    async function onchange(event: React.ChangeEvent<HTMLInputElement>){\r\n        if (event.target.files===null) return;\r\n        let file = event.target.files![0];\r\n        dispatch(asyncSetMainImage(file));\r\n        event.target.value='';\r\n    }\r\n\r\n    let activeimageStyle = {\r\n        backgroundImage:`url(${bookImage.url})`,\r\n    }\r\n\r\n    return <>\r\n        <div className={`book-image ${bookImage.status==='loadend'?\"haveimage\":''}`}>\r\n            <div className='activeimage' style={bookImage.status==='loadend'?activeimageStyle:{}}>\r\n                {bookImage.status==='loading'?<Loader/>:<></>}\r\n                {bookImage.status==='error'?<>\r\n                <span>Ошибка</span>\r\n                <span>загрузите сного</span>\r\n                </>:<></>}\r\n                {bookImage.status!=='loading'?<input type=\"file\" accept=\"image/*\" onInput={onchange}/>:<></>}\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import { setauthtorname, setcollname, setdescription } from \"../../../redux/slices/EditSlice\";\r\nimport { RootState, useAppDispatch, useAppSelector } from \"../../../redux/store\";\r\n\r\nexport function TextInputs(){\r\n    let dispatch = useAppDispatch();\r\n\r\n    let collName = useAppSelector((state:RootState)=>state.edit.collName);\r\n    let authtorName = useAppSelector((state:RootState)=>state.edit.authtorName);\r\n    let description = useAppSelector((state:RootState)=>state.edit.description);\r\n    \r\n    return <>\r\n        <input type=\"text\" \r\n            value={collName} \r\n            onChange={(event)=>dispatch(setcollname(event.target.value))}  \r\n            className={`text serias-name`} \r\n            placeholder='Введите название*'/>\r\n        <input type=\"text\" \r\n            value={authtorName} \r\n            onChange={(event)=>dispatch(setauthtorname(event.target.value))}  \r\n            className={`text authtor-name`} \r\n            placeholder='Имя Автора*'/>\r\n        <div className='textarea'>\r\n            <textarea \r\n                value={description} \r\n                onChange={(event)=>dispatch(setdescription(event.target.value))} \r\n                placeholder='Введите описание*'>\r\n            </textarea>\r\n            <span>{`${description.length}/1000`}</span>\r\n        </div>\r\n    </>\r\n}","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { cancelSeria } from '../../api/editColls/cancelSeria';\r\nimport { deleteSeria } from '../../api/editColls/deleteSeria';\r\nimport { getDataForEdit } from '../../api/editColls/getDataForEdit';\r\nimport { saveSeria } from '../../api/editColls/saveSeria';\r\nimport { Loader } from '../../components/Loader/Loader';\r\nimport { setEditState } from '../../redux/slices/EditSlice';\r\nimport { useAppDispatch } from '../../redux/store';\r\nimport { abortUpload } from '../../Utils/apiUtils/abortFileUpload';\r\nimport { checkSaveControl, okSaveControl, resetSaveControl } from '../../Utils/EditPage/saveControl';\r\nimport { ValidationEdit } from '../../Utils/EditPage/Validation';\r\nimport { sleep } from '../../Utils/other/sleep';\r\nimport { FragmentsEditor } from './FragmentsEditor/FragmentsEditor';\r\nimport { ImageInput } from './Imageinput/ImageInput';\r\nimport './style.scss';\r\nimport { TextInputs } from './TextInputs/textInputs';\r\n\r\nexport default function EditPage(){\r\n    let dispatch = useAppDispatch();\r\n    let navigate = useNavigate();\r\n    let { bookname } = useParams()\r\n\r\n    let [loadend,setloadend]=useState(false);\r\n    let [error,seterror]=useState('');\r\n\r\n    useEffect(()=>{\r\n        onOpen();\r\n        window.addEventListener('beforeunload',onunload);\r\n        resetSaveControl();\r\n        return()=>{\r\n            window.removeEventListener('beforeunload',onunload);\r\n            if (!checkSaveControl()){\r\n                onunload();\r\n            }\r\n        }\r\n    },[])\r\n\r\n    async function onOpen() {\r\n        let res = await getDataForEdit(bookname!);\r\n        if (res!=='error'){\r\n            dispatch(setEditState(res));\r\n        }else{\r\n            navigate('/nopage');\r\n        }\r\n        setloadend(true);\r\n    }\r\n\r\n    async function saveCollection(){\r\n        let ValidationMessage = ValidationEdit();\r\n        if (ValidationMessage!=='ok'){\r\n            seterror(ValidationMessage);\r\n        }else{\r\n            setloadend(false);\r\n            let res = await saveSeria();\r\n            if (res==='ok'){\r\n                dispatch(setEditState(null));\r\n                setloadend(true);\r\n                okSaveControl()\r\n                navigate('/');\r\n            }else{\r\n                setloadend(true);\r\n                seterror('попробуете чуть позже');\r\n            }\r\n        }\r\n    }\r\n    async function cancelCollection(){\r\n        setloadend(false);\r\n        abortUpload();\r\n        await sleep(0);\r\n        let res = await cancelSeria();\r\n        if (res==='ok'){\r\n            dispatch(setEditState(null));\r\n            okSaveControl();\r\n            setloadend(true);\r\n            navigate('/');\r\n        }else{\r\n            setloadend(true);\r\n            seterror('попробуете чуть позже');\r\n        }\r\n    }\r\n    async function removeCollection(){\r\n        setloadend(false);\r\n        abortUpload();\r\n        await sleep(0);\r\n        let res = await deleteSeria();\r\n        if (res==='ok'){\r\n            dispatch(setEditState(null));\r\n            setloadend(true);\r\n            okSaveControl();\r\n            navigate('/');\r\n        }else{\r\n            setloadend(true);\r\n            seterror('попробуете чуть позже');\r\n        }\r\n    }\r\n    function onunload(){\r\n        abortUpload();\r\n        cancelSeria();\r\n    }\r\n\r\n    return <div className={`edit-page `+(ondrag?'ongrag':'')}>    \r\n        {loadend?<>\r\n            <div className='all-conteiner'>\r\n                <div className='edit-conteiner'>\r\n                    <ImageInput/>\r\n                    <div className='right-collomn'>\r\n                        <TextInputs/>\r\n                    </div>\r\n                </div>\r\n               <div className='buttons-group'>\r\n                    <div onClick={saveCollection}>сохранить</div>\r\n                    <div onClick={cancelCollection}>отменить</div>\r\n                    <div onClick={removeCollection}>удалить</div>\r\n                </div>\r\n                <div className='books-group'>\r\n                    <div className='box-editor-fragments'>\r\n                        <FragmentsEditor/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p onClick={cancelCollection} className='audiobook-link'>Audiobooks</p>\r\n            {error!==''?<>\r\n                <div className='error-message' onClick={()=>seterror('')}>\r\n                    <span>Ошибка</span>\r\n                    <span>{error}</span>\r\n                    <span>кликните что бы закрыть</span>\r\n                </div>\r\n            </>:<></>}\r\n        </>:<Loader/>}\r\n    </div>\r\n}"],"names":["cancelSeria","editState","store","edit","removeList","removeOnCancel","apiObj","RemoveList","apiadress","adress","fetch","method","headers","GetToken","body","JSON","stringify","res","text","deleteSeria","removeList1","removeList2","allFilesToRemoveList","href","getDataForEdit","bookname","result","collName","authtorName","description","bookImage","url","googleid","status","collections","removeOnSave","loading","showColl","showBook","dpopElement","dpopType","json","ApiMapToEditMap","saveSeria","fetchBookMap","editMapToApiMap","bookMap","lasthref","saved","okSaveControl","ValidationEdit","length","checkRegular","str","test","AddFragment","onClick","className","getheight","books","sum","forEach","elem","index","num1","bookparts","moveHandler","event","type","num","parent","currentTarget","parentElement","clone","document","createElement","dispatch","setDropElem","innerHTML","style","position","zIndex","width","clientWidth","rect","getBoundingClientRect","bodyScrollTop","window","pageYOffset","classList","add","left","top","appendChild","alllenght","startY","pageY","startY2","addEventListener","mouseup","remove","removeEventListener","mousemove","e","nowY","delta1","delta2","deltaABS","Math","abs","transform","needindex","changePositiom","neednum","MiniLoader","checkLoading","part","numToSize","size","i","floor","BookPart","numCol","numBook","useAppDispatch","lenght","name","jsxfragment","removeFragment","partID","id","abortUpload","numToTime","Bookline","numcoll","numbook","image","show","canMove","useAppSelector","state","useState","renderbooks","setrenderbooks","timoutID","useRef","useEffect","current","clearTimeout","setTimeout","bookPartsBlocks","map","target","files","file","payload","img","numColl","nummBook","asyncSetBookImage","value","Arrayfragments","scrollFragmentsBlock","to","console","log","block","scrollTo","scrollHeight","scrolparam","setscrolparam","onChange","changebookname","Collnum","Booknum","newName","ShowHideBook","removebook","backgroundImage","accept","onMouseDown","ref","onScroll","scrollTop","scrollBottom","clientHeight","height","fileArray","Array","from","asyncAddBookFrahments","multiple","CollLine","arraybooks","changecollname","showHideColl","removecoll","addbook","FragmentsEditor","drop","arrColls","addcoll","ImageInput","asyncSetMainImage","activeimageStyle","Loader","onInput","TextInputs","setcollname","placeholder","setauthtorname","setdescription","EditPage","navigate","useNavigate","useParams","loadend","setloadend","error","seterror","setEditState","ValidationMessage","cancelCollection","sleep","onunload","onOpen","ondrag"],"sourceRoot":""}